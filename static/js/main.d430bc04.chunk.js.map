{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","query","imdbUrl","imgUrl","description","title","descriptionParts","length","toLocaleLowerCase","split","titleParts","commonDescParts","reduce","prevs","current","index","start","join","end","offset","part","slice","highlightedDescParts","_","commonTitleParts","highlightedTitleParts","className","src","alt","map","Fragment","href","MoviesList","movies","imdbId","App","React","useState","setQuery","visibleMovies","moviesFromServer","filter","includes","htmlFor","type","id","placeholder","value","onChange","searchbar","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d430bc04.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ninterface Props {\n  movie: Movie;\n  query: string;\n}\n\nexport const MovieCard: React.FC<Props> = ({ movie, query }) => {\n  const {\n    imdbUrl, imgUrl, description, title,\n  } = movie;\n\n  const descriptionParts = (query.length > 0)\n    ? description\n      .toLocaleLowerCase()\n      .split(query.toLocaleLowerCase())\n    : [description];\n\n  const titleParts = (query.length > 0)\n    ? title\n      .toLocaleLowerCase()\n      .split(query.toLocaleLowerCase())\n    : [title];\n\n  const commonDescParts = descriptionParts\n    .reduce((prevs: string[], current, index) => {\n      const start = prevs.join('').length;\n      const end = start + current.length;\n      const offset = query.length * index;\n\n      const part = description.slice(start + offset, end + offset);\n\n      return [...prevs, part];\n    }, []);\n\n  const highlightedDescParts = descriptionParts\n    .reduce((prevs: string[], _, index) => {\n      const start = commonDescParts\n        .slice(0, index + 1).join('').length;\n      const end = start + query.length;\n      const offset = query.length * index;\n\n      const part = description.slice(start + offset, end + offset);\n\n      return [...prevs, part];\n    }, []);\n\n  const commonTitleParts = titleParts\n    .reduce((prevs: string[], current, index) => {\n      const start = prevs.join('').length;\n      const end = start + current.length;\n      const offset = query.length * index;\n\n      const part = title.slice(start + offset, end + offset);\n\n      return [...prevs, part];\n    }, []);\n\n  const highlightedTitleParts = titleParts\n    .reduce((prevs: string[], _, index) => {\n      const start = commonTitleParts\n        .slice(0, index + 1).join('').length;\n      const end = start + query.length;\n      const offset = query.length * index;\n\n      const part = title.slice(start + offset, end + offset);\n\n      return [...prevs, part];\n    }, []);\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">\n              {\n                commonTitleParts.map((_, index) => (\n                  // eslint-disable-next-line react/no-array-index-key\n                  <React.Fragment key={`${commonTitleParts[index]}${index}`}>\n                    {commonTitleParts[index]}\n                    {\n                      (index < highlightedTitleParts.length)\n                      && (\n                        <span className=\"card__highlighted\">\n                          {highlightedTitleParts[index]}\n                        </span>\n                      )\n                    }\n                  </React.Fragment>\n                ))\n              }\n            </p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {\n            commonDescParts.map((_, index) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <React.Fragment key={`${commonDescParts[index]}${index}`}>\n                {commonDescParts[index]}\n                {\n                  (index < highlightedDescParts.length)\n                  && (\n                    <span className=\"card__highlighted\">\n                      {highlightedDescParts[index]}\n                    </span>\n                  )\n                }\n              </React.Fragment>\n            ))\n          }\n          <br />\n          <a href={imdbUrl}>IMDB</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import './MoviesList.scss';\nimport React from 'react';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n  query: string;\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies, query }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n        query={query}\n      />\n    ))}\n  </div>\n);\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport moviesFromServer from './api/movies.json';\n\nexport const App: React.FC = () => {\n  const [query, setQuery] = React.useState('');\n\n  const visibleMovies = moviesFromServer\n    .filter(\n      ({ title, description }) => (\n        title.toLocaleLowerCase().includes(query.toLocaleLowerCase())\n        || description.toLocaleLowerCase().includes(query.toLocaleLowerCase())\n      ),\n    );\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <div className=\"box\">\n          <div className=\"field\">\n            {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n            <label htmlFor=\"search-query\" className=\"label\">\n              Search movie\n            </label>\n\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"search-query\"\n                className=\"input\"\n                placeholder=\"Type search word\"\n                value={query}\n                onChange={\n                  ({ target: searchbar }) => {\n                    setQuery(searchbar.value);\n                  }\n                }\n              />\n            </div>\n          </div>\n        </div>\n\n        <MoviesList movies={visibleMovies} query={query.toLocaleLowerCase()} />\n      </div>\n      <div className=\"sidebar\">\n        Sidebar goes here\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}